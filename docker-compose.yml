version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: rondo
      POSTGRES_USER: rondo
      POSTGRES_PASSWORD: rondo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rondo -d rondo"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://rondo:rondo@postgres:5432/rondo
      - REDIS_URL=redis://redis:6379/0
      - MAX_AUDIO_DURATION=600
      - SAMPLE_RATE=44100
      - ONSET_TOLERANCE_MS=50
      - PITCH_TOLERANCE=0
    volumes:
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.worker worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://rondo:rondo@postgres:5432/rondo
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy

  # Audiveris OMR Service
  audiveris:
    build:
      context: ./docker/audiveris
      dockerfile: Dockerfile
    volumes:
      - ./uploads:/in
      - ./uploads:/out
    environment:
      - JAVA_OPTS=-Xms512m -Xmx4g
    profiles:
      - omr

volumes:
  postgres_data:
